import argparse
from scarlet_extensions.testing import api, aws


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("-s", "--set", type=int, help="The data set to deblend and calculate metrics")
    parser.add_argument("-b", "--branch", type=str, help="The current branch that is being analyzed")
    parser.add_argument("-a", "--access_key", type=str, help="The AWS access key")
    parser.add_argument("-k", "--secret_key", type=str, help="The AWS secret key")

    args = parser.parse_args()
    assert args.set is not None
    assert args.branch is not None
    set_id = int(args.set)

    # If the user didn't specify the AWS access keys then they must be set as environment variables
    if args.access_key is not None:
        aws.security = {
            "aws_access_key_id": args.access_key,
            "aws_secret_access_key": args.secret_key,
        }

    if set_id in [1, 2]:
        api.deblend_and_measure(set_id, args.branch, save_records=True)
    elif set_id == 3:
        api.deblend_and_measure(set_id, args.branch, save_records=True, save_residuals=True)
    else:
        raise ValueError("set_id must be in [1, 2, 3], got {}".format(set_id))


if __name__ == "__main__":
    main()
